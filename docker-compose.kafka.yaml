version: '3.9'

networks:
  codebasenetwork:
    name: codebasenetwork
    driver: bridge

services:
  zookeeper1:
    container_name: zookeeper1
    image: bitnami/zookeeper:3.9
    ports:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      # - ZOO_ENABLE_PROMETHEUS_METRICS=no
      # - ZOO_PROMETHEUS_METRICS_PORT_NUMBER=7000
      - ALLOW_ANONYMOUS_LOGIN=yes
      # - ZOO_ENABLE_AUTH=yes
      # - ZOO_SERVER_USERS=user1,user2
      # - ZOO_SERVER_PASSWORDS=pass4user1,pass4user2
      # - ZOO_CLIENT_USER=user1
      # - ZOO_CLIENT_PASSWORD=pass4user1
    volumes:
      - ./volumes/zoo/1/:/bitnami/zookeeper
    networks:
      - codebasenetwork

  zookeeper2:
    container_name: zookeeper2
    image: bitnami/zookeeper:3.9
    ports:
      - '2181'
      - '2888'
      - '3888'
    volumes:
      - ./volumes/zoo/2/:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - codebasenetwork

  zookeeper3:
    container_name: zookeeper3
    image: bitnami/zookeeper:3.9
    ports:
      - '2181'
      - '2888'
      - '3888'
    volumes:
      - ./volumes/zoo/3/:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - codebasenetwork

  kafka0:
    container_name: kafka0
    image: bitnami/kafka:3.4.1-debian-11-r117
    ports:
      - '9092'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093,1@kafka1:9093,2@kafka2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Zookeeper
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE=true
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    volumes:
      - ./volumes/kafka/0:/bitnami/kafka
    networks:
      - codebasenetwork

  kafka1:
    container_name: kafka1
    image: bitnami/kafka:3.4.1-debian-11-r117
    ports:
      - '9092'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093,1@kafka1:9093,2@kafka2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Zookeeper
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE=true
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    volumes:
      - ./volumes/kafka/1:/bitnami/kafka
    networks:
      - codebasenetwork

  kafka2:
    container_name: kafka2
    image: bitnami/kafka:3.4.1-debian-11-r117
    ports:
      - '9092'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093,1@kafka1:9093,2@kafka2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Zookeeper
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE=true
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    volumes:
      - ./volumes/kafka/2:/bitnami/kafka
    networks:
      - codebasenetwork

  kafka-helper:
    build:
      context: .
      dockerfile: ./kafka.Dockerfile
    container_name: kafka-helper
    env_file:
      - .env
    environment:
      - TOPICS=${TOPIC_AUDIT:?error},${TOPIC_EVENT:?error}
    depends_on:
      - kafka0
      - kafka1
      - kafka2
    networks:
      - codebasenetwork
